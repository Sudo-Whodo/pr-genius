name: Release
on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r pr-diff-bot/requirements.txt

      - name: Build Docker image
        run: docker build -t pr-diff-analyzer .

  release:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'chore(release):') }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-semantic-release

      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Get Next Version
        id: version
        run: |
          VERSION=$(semantic-release version --print)
          if [ -z "$VERSION" ]; then
            echo "No new version to release"
            exit 0
          fi
          echo "NEW_VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Release Branch and Update Version
        if: steps.version.outputs.NEW_VERSION != ''
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          BRANCH="release-${{ steps.version.outputs.NEW_VERSION }}-$(date +%s)"
          git checkout -b $BRANCH
          semantic-release version

      - name: Create Pull Request
        if: steps.version.outputs.NEW_VERSION != ''
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          BRANCH="release-${{ steps.version.outputs.NEW_VERSION }}-$(date +%s)"
          git push -f origin $BRANCH
          gh pr create \
            --title "chore(release): ${{ steps.version.outputs.NEW_VERSION }}" \
            --body "Automated release PR" \
            --base main \
            --head $BRANCH
